// Демонстрация работы облстей видимости
package core

import "fmt"

// функция уровня пакета
func f()  {

}

func HideF(){
	f:= "hello" // локальное объявление "скрывает" вышестоящее
	println(f)
}

// Демонстрация сокрытия переменных в блоках
// и их области ведимости
func DemoHidingInBlock() {
	x:="Hello!" // видна на уровне всей функции
	fmt.Println("x in func():", x)

	// перемнные объявленные в голове цикла, или в условии, вобщем в
	// заголовке блока, доступны в заголовке блока и во вложенном блоке соотв
	for i:=0; i< len(x); i++ {
		x:= x[i] // здесь вы берем x из вышестоящего блока и объявляем локальную
		// перемнную x, достпную внутри блока for, которая скрывает x="Hello!"
		fmt.Println("x in for:", x)
		if x != '!' {
			x:= x + 'A'-'a' // здесь то же самое объявление внутри блока if скрывает
			// вышестоящую x  = x[i], достпна она только внутри данного if
			fmt.Println("x in if:",x)
		}

		fmt.Println("x after if:", x) // здесь x опять x[i]
	}
	fmt.Println("x after for:", x) // а здесь "Hello!"
	// fmt.Println(i) за границей блока i недостпна
}


